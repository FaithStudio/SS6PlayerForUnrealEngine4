//
// Copyright(C) Web Technology Corp.
//
// SpriteStudio6 Player for UE4 
//   マスクパーツレンダリング用シェーダ 
//

#include "/Engine/Private/Common.ush"

Texture2D CellTexture;
SamplerState CellTextureSampler;

struct VertexOut
{
	float4 Position : SV_POSITION;
	float Alpha : COLOR0;
	float2 TexCoord : TEXCOORD0;
};

VertexOut MainVS(
	in float2 InPosition : ATTRIBUTE0,
	in float4 InColor : ATTRIBUTE1,
	in float2 InTexCoord : ATTRIBUTE2,
	in float2 InColorBlend : ATTRIBUTE3		// 未使用だが、Ss6OffScreenShaderと頂点バッファを共有するため、フォーマットを合わせておく必要がある 
	)
{
	VertexOut VOut;
	VOut.Position = float4(InPosition.xy, 0, 1);
	VOut.Alpha = InColor.a;
	VOut.TexCoord = InTexCoord;
	return VOut;
}

#if COMPILER_METAL || COMPILER_GLSL_ES2
float4 MainPS(VertexOut In) : SV_Target0
#else
float MainPS(VertexOut In) : SV_Target0
#endif
{
	float4 TextureColor;
	TextureColor = Texture2DSample(CellTexture, CellTextureSampler, In.TexCoord);

#if COMPILER_METAL || COMPILER_GLSL_ES2

	float r = (1.0 < (TextureColor.a + In.Alpha)) ? (1.0/255.0) : 0.0;
	return float4(r, r, r, 1.0);

#else

	return (1.0 < (TextureColor.a + In.Alpha)) ? (1.0/255.0) : 0.0;

#endif
}
